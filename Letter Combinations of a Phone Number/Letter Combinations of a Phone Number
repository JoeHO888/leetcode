class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        characterMap = {
            2: "abc", 
            3: "def", 
            4: "ghi",
            5: "jkl",
            6: "mno",
            7: "pqrs",
            8: "tuv",
            9: "wxyz"
        }

        self.res = []
        self.combination = ""
        
        if not digits:
            return []

        def backtrack(i):
            if i >= len(digits):
                self.res.append(self.combination)
                return
            
            digit = int(digits[i])
            for c in characterMap[digit]:
                self.combination += c
                backtrack(i + 1)
                self.combination = self.combination[:-1]
        
        backtrack(0)

        return self.res
