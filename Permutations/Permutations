class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        self.nums = nums
        self.res = []
        self.permutation = []
        self.numAdded = set()

        def backtrack():
            if len(self.permutation) == len(self.nums):
                self.res.append(self.permutation.copy())
                return
            
            for num in self.nums:
                if not num in self.numAdded:
                    self.numAdded.add(num)
                    self.permutation.append(num)
                    backtrack()
                    self.numAdded.remove(num)
                    self.permutation.pop()

        backtrack()
        return self.res