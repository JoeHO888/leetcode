# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:

        def merge2List(list1, list2):
            dummy = ListNode()

            curr = dummy

            curr1, curr2 = list1, list2

            while curr1 and curr2:
                if curr1.val < curr2.val:
                    curr.next = curr1
                    curr = curr1
                    curr1 = curr.next
                else:
                    curr.next = curr2
                    curr = curr2
                    curr2 = curr2.next
            
            if curr1:
                curr.next = curr1
            
            if curr2:
                curr.next = curr2
            
            return dummy.next

        head = ListNode(-2**(32))
        curr = head

        for linkedList in lists:
            curr  = merge2List(curr, linkedList)
        
        return head.next