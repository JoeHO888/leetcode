# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:

        def dfs(node, height):
            if node:
                left_height = dfs(node.left, height)
                right_height = dfs(node.right, height)

                height = max(left_height, right_height) + 1

                self.diameter = max(left_height + right_height, self.diameter)
            else:
                return 0
            return height
        
        self.diameter = 0
        dfs(root, 0)

        return self.diameter




        